#!/usr/bin/env bash

################################################################################

### Set bash environment error management

set -eu

### Add padding to output

echo

### Determine script execution directory, install directory, and source local functions file

exec_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

exec_dir_trim_2="$( echo ${exec_dir} | cut -f 1,2,3 -d'/')"
exec_dir_trim_3="$( echo ${exec_dir} | cut -f 1,2,3,4 -d'/')"

if [ -f "${exec_dir_trim_2}/functions" ]
then
	exec_dir_root="${exec_dir_trim_2}"
else
	if [ -f "${exec_dir_trim_3}/functions" ]
	then
		exec_dir_root="${exec_dir_trim_3}"
	else
		echo "Functions file not found in any second or third level parent directory of: | $exec_dir |"
		echo
        exit 1
	fi
fi

. "$exec_dir_root/functions"

### Source openspace functions file

source_os_dna

### Define formatting

dna-define_formatting

### Define variables

define_vars

################################################################################

check_root

dna-head_script

dna-read_conf_settings

################################################################################

################################################################################
############### Read any project-specific restore script arguments #############
################################################################################

while getopts ":ibdp:l:e:" arguments; do
	case $arguments in
		i)	skip_ee_install="y"
		echo "${r}${b}- Not [re-]installing EasyEngine as per | -i |...${x}"
		echo
		;;
		b)	skip_backup="y"
		echo "${r}${b}- Skipping current sites backup as per | -b |...${x}"
		echo
		;;
		d)	delete_existing="y"
		echo "${r}${b}- Deleting any already existing site to restore without asking as per | -d |...${x}"
		echo
		;;
		p)	enable_php="$OPTARG"
		;;
		l)	enable_le="$OPTARG"
		;;
		c)	content="$OPTARG"
		;;
		e)	exclude_sites="$OPTARG"
		;;
		\?)	echo "${r}${b}Invalid option | -$OPTARG | for function | ${FUNCNAME[0]} |.${x}"
		echo
		dna-exit_function
		;;
	esac
done

if [ ! -z "${enable_php-}" ]
then
	case "$enable_php" in
		y)	echo "${b}- Activating PHP on any NON wordpress site to restore without asking as per | -p y |...${x}"
		echo
		;;
		n)	echo "${b}- NOT activating PHP on any NON wordpress site to restore without asking as per | -p n |...${x}"
		echo
		;;
		*)	echo "${r}${b}Invalid content for | -p | argument in function | ${FUNCNAME[0]} |.${x}"
		echo
		dna-exit_function
		;;
	esac
fi

if [ ! -z "${enable_le-}" ]
then
	case "$enable_le" in
		y)	echo "${b}- Provisioning LetsEncrypt TLS certificate for restored sites without asking as per | -l y |...${x}"
		echo
		;;
		o)	echo "${b}- Provisioning LetsEncrypt TLS certificate OPPORTUNISTICALLY for restored sites without asking as per | -l o |...${x}"
		echo
		;;
		n)	echo "${b}- NOT provisioning LetsEncrypt TLS certificate for restored sites without asking as per | -l n |...${x}"
		echo
		;;
		*)	echo "${r}${b}Invalid content for | -l | argument in function | ${FUNCNAME[0]} |.${x}"
		echo
		dna-exit_function
		;;
	esac
fi

if [ ! -z "${exclude_sites-}" ]
then
	if [ ! "${exclude_sites-null}" = "" ]
	then
		echo "${b}- Excluding sites | ${r}$exclude_sites${x}${b} | from restore as per | -e [...] |...${x}"
		echo
	else
		echo "${r}${b}Invalid content for | -e | argument in function | ${FUNCNAME[0]} |.${x}"
		echo
		echo "${b}Argument value must be defined and be a quoted comma-space delimited list of sites to exclude form restore.${x}"
		echo
		dna-exit_function
	fi
fi

################################################################################
################################################################################
################################################################################

################################################################################

dna-br_purge_incomplete_archives

dna-br_purge_dirs

dna-br_create_dirs restore

################################################################################

dna-check_install_complete

if [ "$install_complete" = "n" ]
then

	echo "${r}${b}It appears $proj_name is not currently installed or there is an incomplete installation on this machine.${x}"
	echo
	echo "${b}If you have an S3 backup and want to restore your previous instance of $proj_name on this machine while inheriting all of your old settings, you can still run this script, although in bootstrap mode, therefore running the restore prior to actually running the $proj_name installation.${x}"
	echo
	echo "${b}If this is not the case, you must run [or finish running] the install script first.${x}"
	echo

	ask_for_boolean_question="Run this script in bootstrap mode to restore your previous instance from S3?"

	dna-ask_for_boolean_def_no

	if [ "$ask_for_boolean_output" = "y" ]
	then
		echo "${b}Ok, continuing in bootstrap mode.${x}"
		echo
		bootstrap_mode="y"
	else
		echo "${b}Ok, aborting.${x}"
		echo
		dna-exit_function
	fi

	if [ ${bootstrap_mode-null} = "y" ]
	then

		dna-setup_backup_restore_s3 -s
		dna-br_launch_restore -s
		rsync -aAXx --delete "$restore_file_path/conf/" "$conf_dir/"

		echo "${g-}${b-}Bootstrap-mode restore from S3 complete.${x-}"
		echo
		echo "${b-}Now launching installation.${x-}"
		echo

		dna-run_install

		echo "${g-}${b-}Bootstrap-mode installation complete.${x-}"
		echo
		echo "${b-}Exiting.${x-}"
		echo

		exit

	fi

fi

if [ ! "${skip_ee_install:-null}" = "y" ]
then
	dna-install_easyengine
fi

################################################################################

################################################################################
#################### Specify your restore-time settings here ###################
################################################################################

restore_from_standalone_content_description() {
	echo "${b}1] /root/$proj_name-restore/config/${x}"
	echo "${b}2] /root/$proj_name-restore/data/${x}"
    echo "${b}  2.1] /root/$proj_name-restore/data/example.org/${x}"
    echo "${b}    2.1.1] /root/$proj_name-restore/data/example.org/htdocs/${x}"
    echo "${b}    2.1.2] /root/$proj_name-restore/data/example.org/mysqldump.sql [only for wp sites]${x}"
    echo "${b}    2.1.3] /root/$proj_name-restore/data/example.org/wp-config.php [only for wp sites]${x}"
}

validate_standalone_restore_content="n"

restore_from_standalone_content_validation() {

	true   ### Edit this to perform standalone restore content validation

}

################################################################################
################################################################################
################################################################################

dna-br_launch_restore

################################################################################

### Perform a [last] backup of this currently running installation just in case

if [ ! "${skip_backup:-null}" = "y" ]
then

	dna-br_last_local_backup

fi

################################################################################

restore_loop

dna-br_purge_dirs

echo "${g}${b}Restore complete!${x}"
echo
