#!/usr/bin/env bash

################################################################################

### Set bash environment error management

set -eu

################################################################################

### Add padding to output

echo

################################################################################

### Determine script execution directory and install directory.

exec_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

exec_dir_trim_2="$( echo ${exec_dir} | cut -f 1,2,3 -d'/')"
exec_dir_trim_3="$( echo ${exec_dir} | cut -f 1,2,3,4 -d'/')"

if [ -f "${exec_dir_trim_2}/functions" ]
then
	exec_dir_root="${exec_dir_trim_2}"
else
	if [ -f "${exec_dir_trim_3}/functions" ]
	then
		exec_dir_root="${exec_dir_trim_3}"
	else
		echo "Functions file not found in any second or third level parent directory of: | ${exec_dir} |."
		echo
		echo "Exiting..."
		echo
        exit 1
	fi
fi

### Source local functions file.

. "$exec_dir_root/functions"

################################################################################

### Define formatting

synthia-define_formatting

################################################################################

### Check for root user runtime

synthia-check_root

################################################################################

### Source dna

synthia-source_dna

################################################################################

### Define variables

synthia-define_vars

################################################################################

### Read conf settings

dna-read_conf_settings

################################################################################

### Log script

dna-log_script

################################################################################

### Read arguments

if [ $# -eq 0 ]
then
    dna-echo -e "No argument supplied for function | ${n-}${FUNCNAME[0]}${r-} |."
    dna-echo -m "This script must not be run directly."
    dna-echo -m "It is only meant to be executed by other functions remotely."
    dna-exit
fi

while getopts ":c:" arguments
do
    case $arguments in
        c)	commands="${OPTARG}"
	        ;;
        \?)	dna-echo -e "Invalid option | ${n-}-$OPTARG${r-} | for function | ${n-}${FUNCNAME[0]}${r-} |."
	        dna-exit
	        ;;
    esac
done
OPTIND=1

if [ -z "${commands-}" ]
then
    dna-echo -e "Commands [option | ${n-}-c${r-} |] must be supplied for function | ${n-}${FUNCNAME[0]}${r-} |."
    dna-exit
fi

################################################################################

### Execute commands

echo "$commands" |
while IFS= read -r line
do
        if [ ! -z "${line-}" ]
        then
                line="$(echo $line | xargs)"
                ${line}
        fi
done
IFS=$' \t\n'
